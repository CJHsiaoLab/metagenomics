}));
return(out)
})
indices_mat_poisson=matrix(0,dim(topics_theta)[2],10);
for(k in 1:dim(topics_theta)[2])
{
temp_mat <- KL_score_poisson[[k]][,-k];
vec <- order(temp_mat, decreasing=TRUE)[1:4]
print(vec)
}
## so under this scenario, the genes that is shown by Structure are also not reliable: low signal?
library(maptpx)
n.out <- 200
omega_sim <- cbind(seq(0.6,0.4,length.out=n.out), 1- seq(0.6,0.4,length.out=n.out));
K <- dim(omega_sim)[2];
png(filename = '../plots/true_structure_setup_2.png')
barplot(t(omega_sim),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("True structure plot, K=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
dev.off()
library(maptpx)
n.out <- 200
omega_sim <- cbind(seq(0.6,0.4,length.out=n.out), seq(0.1,0.2,length.out=n.out),seq(0.1,0.2,length.out=n.out), seq(0.1,0.2,length.out=n.out), 1- seq(0.6,0.4,length.out=n.out)-seq(0.1,0.2,length.out=n.out)-seq(0.1,0.2,length.out=n.out)-seq(0.1,0.2,length.out=n.out));
K <- dim(omega_sim)[2];
barplot(t(omega_sim),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
png(filename='../plots/true_structure_setup_3.png')
barplot(t(omega_sim),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
dev.off()
freq <- rbind(c(0.01,0.02,rep(0.97/498,498)),c(rep(0.98/498,498),0.01,0.01),c(rep(0.97/498,498), 0.01,0.02),c(0.01,0.01,0.1,0.2,rep(0.68/496,496)),c(rep(0.05,10),0.02,rep(0.48/489,489)));
counts <- t(do.call(cbind,lapply(1:dim(omega_sim)[1], function(x) rmultinom(1,1000,prob=omega_sim[x,]%*%freq))));
Topic_clus <- topics(counts, K=2,tol=0.001);
K=2
barplot(t(Topic_clus$omega),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
png(filename='../plots/est_structure_setup_3.png')
barplot(t(Topic_clus$omega),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
dev.off()
freq <- rbind(c(0.01,0.02,rep(0.97/498,498)),c(rep(0.98/498,498),0.01,0.01),c(rep(0.97/498,498), 0.01,0.02),c(0.01,0.01,0.1,0.2,rep(0.68/496,496)),c(rep(0.05,5),rep(0.75/495,495)));
counts <- t(do.call(cbind,lapply(1:dim(omega_sim)[1], function(x) rmultinom(1,1000,prob=omega_sim[x,]%*%freq))));
Topic_clus <- topics(counts, K=2,tol=0.001);
K=2
barplot(t(Topic_clus$omega),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
freq <- rbind(c(0.01,0.02,rep(0.97/498,498)),c(rep(0.98/498,498),0.01,0.01),c(rep(0.97/498,498), 0.01,0.02),c(0.01,0.01,0.1,0.2,rep(0.68/496,496)),c(rep(0.1,5),rep(0.5/495,495)));
Topic_clus <- topics(counts, K=2,tol=0.001);
K=2
barplot(t(Topic_clus$omega),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
counts <- t(do.call(cbind,lapply(1:dim(omega_sim)[1], function(x) rmultinom(1,1000,prob=omega_sim[x,]%*%freq))));
Topic_clus <- topics(counts, K=2,tol=0.001);
K=2
barplot(t(Topic_clus$omega),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
png(filename='../plots/est_structure_setup_3.png')
barplot(t(Topic_clus$omega),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
dev.off()
png(filename='../plots/true_structure_setup_3.png')
barplot(t(omega_sim),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("True structure plot, K=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
dev.off()
png(filename='../plots/est_structure_setup_3.png')
barplot(t(Topic_clus$omega),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("Est. structure plot, K=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
dev.off()
K
K=5
K <- dim(omega_sim)[2];
png(filename='../plots/true_structure_setup_3.png')
barplot(t(omega_sim),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("True structure plot, K=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
dev.off()
library(maptpx)
n.out <- 200
omega_sim <- cbind(seq(0.6,0.4,length.out=n.out), 1- seq(0.6,0.4,length.out=n.out));
K <- dim(omega_sim)[2];
barplot(t(omega_sim),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
freq <- rbind(c(0.1,0.2,rep(0.70/98,98)),c(rep(0.70/98,98), 0.1,0.2));
counts <- t(do.call(cbind,lapply(1:dim(omega_sim)[1], function(x) rmultinom(1,1000,prob=omega_sim[x,]%*%freq))));
Topic_clus <- topics(counts, K=2,tol=0.001);
K=2
barplot(t(Topic_clus$omega),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
library(maptpx)
n.out <- 200
omega_sim <- cbind(seq(0,1,length.out=n.out), 1- seq(0,1,length.out=n.out));
K <- dim(omega_sim)[2];
barplot(t(omega_sim),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
dim(freq)
library(maptpx)
n.out <- 200
omega_sim <- cbind(seq(0,1,length.out=n.out), 1- seq(0,1,length.out=n.out));
K <- dim(omega_sim)[2];
barplot(t(omega_sim),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
freq2[1,] <- 0.6*freq1[1,]+0.4*freq1[2,];
freq2[2,] <- 0.6*freq1[2,]+0.4*freq1[1,];
counts <- t(do.call(cbind,lapply(1:dim(omega_sim)[1], function(x) rmultinom(1,1000,prob=omega_sim[x,]%*%freq2))));
freq1 <- rbind(c(0.1,0.2,rep(0.70/98,98)),c(rep(0.70/98,98), 0.1,0.2));
freq2[1,] <- 0.6*freq1[1,]+0.4*freq1[2,];
freq2[2,] <- 0.6*freq1[2,]+0.4*freq1[1,];
freq2 <- freq1
freq2[1,] <- 0.6*freq1[1,]+0.4*freq1[2,];
freq2[2,] <- 0.6*freq1[2,]+0.4*freq1[1,];
counts <- t(do.call(cbind,lapply(1:dim(omega_sim)[1], function(x) rmultinom(1,1000,prob=omega_sim[x,]%*%freq2))));
Topic_clus <- topics(counts, K=2,tol=0.001);
K=2
barplot(t(Topic_clus$omega),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
library(maptpx)
n.out <- 200
omega_sim <- cbind(seq(0,1,length.out=n.out), 1- seq(0,1,length.out=n.out));
K <- dim(omega_sim)[2];
barplot(t(omega_sim),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
freq2 <- matrix(0,2,length(freq[1,]))
freq2[1,] <- 0.6*freq1[1,]+0.4*freq1[2,];
freq2[2,] <- 0.6*freq1[2,]+0.4*freq1[1,];
counts <- t(do.call(cbind,lapply(1:dim(omega_sim)[1], function(x) rmultinom(1,1000,prob=omega_sim[x,]%*%freq2))));
Topic_clus <- topics(counts, K=2,tol=0.001);
K=2
barplot(t(Topic_clus$omega),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
freq2
freq2[,1:5]
freq1[,1:5]
library(maptpx)
n.out <- 200
omega_sim <- cbind(seq(0,1,length.out=n.out), 1- seq(0,1,length.out=n.out));
K <- dim(omega_sim)[2];
barplot(t(omega_sim),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
freq2 <- matrix(0,2,length(freq[1,]))
freq2[1,] <- 0.8*freq1[1,]+0.2*freq1[2,];
freq2[2,] <- 0.8*freq1[2,]+0.2*freq1[1,];
counts <- t(do.call(cbind,lapply(1:dim(omega_sim)[1], function(x) rmultinom(1,1000,prob=omega_sim[x,]%*%freq2))));
Topic_clus <- topics(counts, K=2,tol=0.001);
K=2
barplot(t(Topic_clus$omega),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
library(maptpx)
n.out <- 200
omega_sim <- cbind(seq(0,1,length.out=n.out), 1- seq(0,1,length.out=n.out));
K <- dim(omega_sim)[2];
barplot(t(omega_sim),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
freq2 <- matrix(0,2,length(freq[1,]))
freq2[1,] <- 0.5*freq1[1,]+0.5*freq1[2,];
freq2[2,] <- 0.5*freq1[2,]+0.5*freq1[1,];
counts <- t(do.call(cbind,lapply(1:dim(omega_sim)[1], function(x) rmultinom(1,1000,prob=omega_sim[x,]%*%freq2))));
Topic_clus <- topics(counts, K=2,tol=0.001);
K=2
barplot(t(Topic_clus$omega),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
rowSums(freq1)
rowSums(freq2)
library(maptpx)
n.out <- 200
omega_sim <- cbind(rep(0.6,n.out), 1- rep(0.6,n.out));
K <- dim(omega_sim)[2];
barplot(t(omega_sim),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
freq1 <- rbind(c(0.1,0.2,rep(0.70/98,98)),c(rep(0.70/98,98), 0.1,0.2));
counts <- t(do.call(cbind,lapply(1:dim(omega_sim)[1], function(x) rmultinom(1,1000,prob=omega_sim[x,]%*%freq1))));
Topic_clus <- topics(counts, K=2,tol=0.001);
K=2
barplot(t(Topic_clus$omega),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
library(maptpx)
n.out <- 200
omega_sim <- cbind(rep(1,n.out), 1- rep(1,n.out));
K <- dim(omega_sim)[2];
barplot(t(omega_sim),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
freq2 <- matrix(0,2,length(freq[1,]))
freq2[1,] <- 0.5*freq1[1,]+0.5*freq1[2,];
freq2[2,] <- 0.5*freq1[2,]+0.5*freq1[1,];
counts <- t(do.call(cbind,lapply(1:dim(omega_sim)[1], function(x) rmultinom(1,1000,prob=omega_sim[x,]%*%freq2))));
Topic_clus <- topics(counts, K=2,tol=0.001);
K=2
barplot(t(Topic_clus$omega),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=1.5,cex.main=1.4)
setwd('/Users/kushal/Documents/Matthew Stephens Project/batch_effects/src');
list.files(path='../external_data/Deng_2014/');
file_list <- list.files(path='../external_data/Deng_2014/')
names_files <- sapply(1:length(file_list), function(x) strsplit(file_list[x],"_expression"));
names_files
names_files <- sapply(1:length(file_list), function(x) strsplit(file_list[x],"_expression")[[1]][1]);
names_files
i=1;
data <- data.frame(fread(file_list[i]))
file_list[i]
setwd('../external_data/Deng_2014/')
data <- data.frame(fread(paste0(file_list[i]))
)
dim(data)
data[1,]
reads_data <- cbind(reads_data, data$reads);
reads_data <- matrix(NA, ncol=0);
reads_data <- matrix(0, ncol=0);
reads_data <- as.matrix();
i=2
data <- data.frame(fread(paste0(file_list[i]));
data <- data.frame(fread(file_list[i]));
data <- data.frame(fread(paste0(file_list[i])));
paste0(file_list[i])
data <- data.frame(fread(paste0(file_list[i])));
data <- data.frame(fread(paste0(file_list[i])));
reads_data <- cbind(reads_data, data$reads);
data <- data.frame(fread(paste0(file_list[i])));
i=1
data <- data.frame(fread(paste0(file_list[i])));
paste0(file_list[i])
setwd('/Users/kushal/Documents/Matthew Stephens Project/batch_effects/src');
file_list <- list.files(path='../external_data/Deng_2014/')
names_files <- sapply(1:length(file_list), function(x) strsplit(file_list[x],"_expression")[[1]][1]);
setwd('../external_data/Deng_2014/')
i=3
data <- data.frame(fread(paste0(file_list[i])));
dim(data)
reads_data <- as.matrix(,nrow=22958, ncol=0);
reads_data <- matrix(,nrow=22958, ncol=0);
data <- data.frame(fread(paste0(file_list[i])));
data$RPKM
reads_data <- matrix(,nrow=22958, ncol=0);
rpkm_data <- matrix(,nrow=22958, ncol=0);
for(i in 1:length(file_list))
{
data <- data.frame(fread(paste0(file_list[i])));
reads_data <- cbind(reads_data, data$reads);
rpkm_data <- cbind(rpkm_data, data$RPKM);
}
dim(reads_data)
length(list_files)
length(names_files)
dim(rpkm_data)
write.table(rpkm_data,'../Deng_rpkm_data.txt');
write.table(reads_data,'../Deng_reads_data.txt');
write.table(names_files, '../Deng_sample_info.txt');
colnames(rpkm_data) =names_files;
colnames(reads_data) =names_files;
write.table(rpkm_data,'../Deng_rpkm_data.txt');
write.table(reads_data,'../Deng_reads_data.txt');
write.table(names_files, '../Deng_sample_info.txt');
setwd('/Users/kushal/Documents/Matthew Stephens Project/batch_effects/src/');
reads_data <- data.frame(fread('../external_data/Deng_reads_data.txt'));
dim(reads_data)
reads_data[1,]
colnames(reads_data)
reads_data <- data.frame(fread('../external_data/Deng_reads_data.txt'),header=TRUE);
colnames(reads_data)
reads_data <- data.frame(fread('../external_data/Deng_reads_data.txt'),col.names=1);
colnames(reads_data)
reads_data <- data.frame(fread('../external_data/Deng_reads_data.txt',col.names=1));
reads_data[1:5,1:5]
reads_data <- data.frame(fread('../external_data/Deng_reads_data.txt'),row.names=1);
dim(reads_data)
reads_data[1:5,1:5]
sample_info <- read.table('../external_data/Deng_sample_info.txt');
sample_info
sample_info <- read.table('../external_data/Deng_sample_info.txt')[,2];
sample_info <- as.vector(read.table('../external_data/Deng_sample_info.txt'));
sample_info <- read.table('../external_data/Deng_sample_info.txt')[,2];
sample_info
sample_info <- as.vector(read.table('../external_data/Deng_sample_info.txt'));
sample_info
dim(reads_data)
Topic_clus <- topics(counts, K=7, tol=0.0005);
counts <- t(reads_data);
Topic_clus <- topics(counts, K=7, tol=0.0005);
dim(counts)
counts[1:10,1:10]
Topic_clus <- topics(counts, K=7, tol=0.005);
counts <- t(reads_data);
thinning_function <- function(counts, p_thin)
{
counts_thin <- apply(counts, c(1,2), function(x) return rbinom(1,x,p_thin))
return(counts_thin)
}
counts_thin <- thinning_function(counts,0.001);
thinning_function <- function(counts, p_thin)
{
counts_thin = apply(counts, c(1,2), function(x) return rbinom(1,x,p_thin))
return(counts_thin)
}
thinning_function = function(counts, p_thin)
{
counts_thin = apply(counts, c(1,2), function(x) return rbinom(1,x,p_thin))
return(counts_thin)
}
counts_thin = apply(counts, c(1,2), function(x) return rbinom(1,x,p_thin))
counts_thin = apply(counts, c(1,2), function(x) return(rbinom(1,x,p_thin)))
thinning_function = function(counts, p_thin)
{
counts_thin = apply(counts, c(1,2), function(x) return(rbinom(1,x,p_thin)))
return(counts_thin)
}
counts_thin <- thinning_function(counts,0.001);
Topic_clus <- topics(counts_thin, K=7, tol=0.005);
type_info <- sample_info;
docweights <- Topic_clus$omega;
type_ordered <- type_info[order(type_info)];
docweights_ordered <- docweights[order(type_info),];
barplot(t(docweights_ordered),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=0.3,cex.main=1.4);
labels = match(unique(type_ordered), type_ordered);
abline(v=labels-1)
dim(type_info)
type_info <- as.character(as.vector(sample_info));
type_info
type_info <- as.vector(sample_info));
type_info <- as.vector(sample_info);
type_info
type_info <- as.vector(as.matrix((sample_info)));
type_info
K=7
type_ordered <- type_info[order(type_info)];
docweights_ordered <- docweights[order(type_info),];
barplot(t(docweights_ordered),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=0.3,cex.main=1.4);
labels = match(unique(type_ordered), type_ordered);
abline(v=labels-1)
labels
x=1
strsplit(type_info[x])
strsplit(type_info[x],"_")
sample_id <- sapply(1:length(type_info), function(x) strsplit(type_info[x],"_")[[1]][1])
sample_id
unique(sample_id)
cell_type <- sapply(1:length(type_info), function(x) strsplit(type_info[x],"_")[[1]][2])
cell_type
type_info <- cell_type;
K=7
type_ordered <- type_info[order(type_info)];
docweights_ordered <- docweights[order(type_info),];
barplot(t(docweights_ordered),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=0.3,cex.main=1.4);
labels = match(unique(type_ordered), type_ordered);
abline(v=labels-1)
labels_low=labels-1;
labels_up=c(labels_low[2:length(labels_low)],dim(docweights_ordered)[1]);
mid_point <- labels_low +0.5*(labels_up-labels_low);
axis(1,at=mid_point, unique(type_ordered),las=2,cex.axis=0.3);
sample_info
grep("smartseq2", sample_info)
temp <- sapply(1:length(sample_info), function(x) strsplit(sample_info[x],"_")[[1]][3])
sample_info
sample_info <- as.vector(as.matrix((sample_info)));
temp <- sapply(1:length(sample_info), function(x) strsplit(sample_info[x],"_")[[1]][3])
temp
grep(temp,"split")
grep("split",temp)
pooled_labs <- grep("2pooled",temp);
temp1 <- sapply(1:length(sample_info), function(x) strsplit(sample_info[x],"_")[[1]][4])
temp1
grep("smartseq2", temp1)
CxBlabs <- grep("CxB",temp1);
CxBlabs
sample_info
extra_labs <- character(, length=dim(counts_thin)[1]);
extra_labs <- character(NA, length=dim(counts_thin)[1]);
extra_labs <- numeric(NA, length=dim(counts_thin)[1]);
extra_labs <- array(NA, length=dim(counts_thin)[1]);
extra_labs <- array(, length=dim(counts_thin)[1]);
extra_labs <- array(, dim(counts_thin)[1]);
extra_labs
extra_labs <- array(, dim(counts_thin)[1]);
extra_labs[BxClabs]="BxC"
extra_labs[CxBlabs]="CxB"
extra_labs[split_labs2]=temp[split_labs2]
extra_labs[split_labs]=temp1[split_labs]
extra_labs[smartseq_labs]=temp1[smartseq_labs];
smartseq_labs <- grep("smartseq2", temp1)
CxBlabs <- grep("CxB",temp1);
BxClabs <- grep("BxC",temp1);
split_labs <- grep("split", temp1);
split_labs2 <- grep("split", temp);
extra_labs <- array(, dim(counts_thin)[1]);
extra_labs[BxClabs]="BxC"
extra_labs[CxBlabs]="CxB"
extra_labs[split_labs2]=temp[split_labs2]
extra_labs[split_labs]=temp1[split_labs]
extra_labs[smartseq_labs]=temp1[smartseq_labs];
extra_labs
sample_info
cell_type
cell_type[grep("zy",cell_type)]="zy";
cell_type
cell_type <- strcat(cell_type,"_",extra_labs)
type_info <- paste0(cell_type,"_", extra_labs);
type_info
K=7
type_ordered <- type_info[order(type_info)];
docweights_ordered <- docweights[order(type_info),];
barplot(t(docweights_ordered),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=0.3,cex.main=1.4);
labels = match(unique(type_ordered), type_ordered);
abline(v=labels-1)
labels_low=labels-1;
labels_up=c(labels_low[2:length(labels_low)],dim(docweights_ordered)[1]);
mid_point <- labels_low +0.5*(labels_up-labels_low);
axis(1,at=mid_point, unique(type_ordered),las=2,cex.axis=0.3);
sample_info <- as.vector(as.matrix((sample_info)));
sample_id <- sapply(1:length(sample_info), function(x) strsplit(sample_info[x],"_")[[1]][1])
cell_type <- sapply(1:length(sample_info), function(x) strsplit(sample_info[x],"_")[[1]][2])
temp <- sapply(1:length(sample_info), function(x) strsplit(sample_info[x],"_")[[1]][3])
temp1 <- sapply(1:length(sample_info), function(x) strsplit(sample_info[x],"_")[[1]][4])
smartseq_labs <- grep("smartseq2", temp1)
CxBlabs <- grep("CxB",temp1);
BxClabs <- grep("BxC",temp1);
split_labs <- grep("split", temp1);
split_labs2 <- grep("split", temp);
extra_labs <- array(, dim(counts_thin)[1]);
extra_labs[BxClabs]="BxC"
extra_labs[CxBlabs]="CxB"
extra_labs[split_labs2]="split"
extra_labs[split_labs]="split"
extra_labs[smartseq_labs]=temp1[smartseq_labs];
cell_type[grep("zy",cell_type)]="zy";
cell_type <- strcat(cell_type,"_",extra_labs)
type_info <- paste0(cell_type,"_", extra_labs);
K=7
type_ordered <- type_info[order(type_info)];
docweights_ordered <- docweights[order(type_info),];
barplot(t(docweights_ordered),col=2:(K+1),axisnames=F,space=0,border=NA,main=paste("No. of clusters=",K),las=1,ylim=c(0,1),cex.axis=0.3,cex.main=1.4);
labels = match(unique(type_ordered), type_ordered);
abline(v=labels-1)
labels_low=labels-1;
labels_up=c(labels_low[2:length(labels_low)],dim(docweights_ordered)[1]);
mid_point <- labels_low +0.5*(labels_up-labels_low);
axis(1,at=mid_point, unique(type_ordered),las=2,cex.axis=0.3);
```{r echo=TRUE, eval=TRUE, cache=TRUE}
suppressMessages(suppressWarnings(library(metagenomeSeq)))
suppressMessages(suppressWarnings(library(maptpx)))
suppressMessages(suppressWarnings(library(tsne)))
suppressMessages(suppressWarnings(library(qtlcharts)))
library(qvalue)
#setwd('/Users/kushal/Documents/metagenomics/src')
load('../data/HMPvs35_nt100_MRexperiment.rdata')
hmp <- filterData(hmp,present=10);
#mat_temp <- t(MRcounts(hmp));
mat = t(MRcounts(hmp,norm=TRUE,log=TRUE));
mat_round <- round(mat);
metadata <- pData(hmp);
otu_data <- featureData(hmp)
hands_data <- mat_round[which(metadata$HMPbodysupersite=="Skin"),];
metadata <- metadata[which(metadata$HMPbodysupersite=="Skin"),];
fossa_crease_label <- sapply(1:dim(metadata)[1], function(x) strsplit(metadata$HMPbodysubsite[x],"_")[[1]][3]);
fossa_indices <- which(fossa_crease_label=='fossa');
crease_indices <- which(fossa_crease_label=='crease');
fossa_data <- hands_data[fossa_indices,];
crease_data <- hands_data[crease_indices,];
metadata_fossa <- metadata[fossa_indices,];
metadata_crease <- metadata[crease_indices,];
setwd('/Users/kushal/Documents/metagenomics/src')
suppressMessages(suppressWarnings(library(metagenomeSeq)))
suppressMessages(suppressWarnings(library(maptpx)))
suppressMessages(suppressWarnings(library(tsne)))
suppressMessages(suppressWarnings(library(qtlcharts)))
library(qvalue)
#setwd('/Users/kushal/Documents/metagenomics/src')
load('../data/HMPvs35_nt100_MRexperiment.rdata')
hmp <- filterData(hmp,present=10);
#mat_temp <- t(MRcounts(hmp));
mat = t(MRcounts(hmp,norm=TRUE,log=TRUE));
mat_round <- round(mat);
metadata <- pData(hmp);
otu_data <- featureData(hmp)
hands_data <- mat_round[which(metadata$HMPbodysupersite=="Skin"),];
metadata <- metadata[which(metadata$HMPbodysupersite=="Skin"),];
fossa_crease_label <- sapply(1:dim(metadata)[1], function(x) strsplit(metadata$HMPbodysubsite[x],"_")[[1]][3]);
fossa_indices <- which(fossa_crease_label=='fossa');
crease_indices <- which(fossa_crease_label=='crease');
fossa_data <- hands_data[fossa_indices,];
crease_data <- hands_data[crease_indices,];
metadata_fossa <- metadata[fossa_indices,];
metadata_crease <- metadata[crease_indices,];
dim(fossa_data)
iPlotCurves(1:dim(fossa_data)[2],fossa_data)
library(qtlcharts)
library(qtlcharts)
iPlotCurves(1:dim(fossa_data)[2],fossa_data)
iplotCurves(1:dim(fossa_data)[2],fossa_data)
iplotCurves(fossa_data)
metadata_fossa
metadata_fossa$HMPbodysupersite
metadata_fossa$HMPbodysubsite
rownames(fossa_data)=metadata_fossa$HMPbodysubsite
iplotCurves(fossa_data)
order(metadata_fossa$HMPbodysubsite)
metadata_fossa$HMPbodysubsite[order(metadata_fossa$HMPbodysubsite)]
fossa_ordered <- fossa_data[order(metadata_fossa$HMPbodysubsite),];
temp <- fossa_ordered[,1:100];
dim(temp)
iplotCurves(t(temp))
table(metadata_fossa$HMPbodysubsite[order(metadata_fossa$HMPbodysubsite)])
colnames(temp)=1:100
iplotCurves(t(temp))
temp <- fossa_ordered[,1:200];
colnames(temp)=1:200
iplotCurves(t(temp))
temp <- fossa_ordered[,1:50];
colnames(temp)=1:50
iplotCurves(t(temp))
temp <- fossa_ordered[,1:100];
colnames(temp)=1:100
iplotCurves(t(temp))
iplotCurves(crease_data)
metadata_crease$HMPbodysubsite[order(metadata_crease$HMPbodysubsite)]
crease_ordered <- crease_data[order(metadata_crease$HMPbodysubsite),];
temp <- crease_ordered[,1:100];
colnames(temp)=1:100
iplotCurves(t(temp))
temp <- crease_ordered[,100:200];
colnames(temp)=100:200
iplotCurves(t(temp))
)
table(metadata_crease$HMPbodysubsite[order(metadata_crease$HMPbodysubsite)])
temp <- crease_ordered[,500:600];
colnames(temp)=500:600
iplotCurves(t(temp))
rm(list=ls())
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages("rstudioapi")
rstudioapi::isAvailable("0.99.149")
devtools::install_github("hadley/devtools")
install.packages("rstudioapi")
rstudioapi::isAvailable("0.99.149")
install.packages("rstudioapi")
library(rstudioapi)
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
## Hadley Wickham R packages - Primer -
t
library(devtools)
library(rstudioapi)
has_devel()
library(roxygen2)
library(testthat)
devtools::session_info()
