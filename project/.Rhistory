2),"%") )
title(main = paste("RNA < Protein",sum(ii_proGTrna),
"genes"),
ylab = "absolute divergence (human-chimpanzee fold change)")
sum(ii_rnaGTpro)
sum(ii_proGTrna)
sum(ii_proNULLrna)
238+73
294+17
ii_select <- ii_proNULLrna*(res.riborna$int.qval<.01)
sub_data <- dmat_unnormed[which(ii_select==1), ]
## Direction of ribo divergence compared to RNA
ii_rna_ribo_enhanced <- (sub_data$rna * sub_data$ribo > 0) & ( abs(sub_data$ribo) > abs(sub_data$rna) )
ii_rna_ribo_attenuated <- (sub_data$rna * sub_data$ribo < 0) | ( abs(sub_data$ribo) < abs(sub_data$rna) )
## Direction of protein divergence compared to RNA
ii_rna_pro_enhanced <- abs(sub_data$rna) < abs(sub_data$pro)
ii_rna_pro_attenuated <- abs(sub_data$rna) > abs(sub_data$pro)
plot_mat <- matrix(0, 2, 2)
rownames(plot_mat) <- c("Enhanced at translation relative to RNA (RNA-Ribo enhanced)", "Attenuated at translation relative to RNA (RNA-Ribo attenuated)")
colnames(plot_mat) <- c("Enhanced at protein relative to RNA (RNA-Protein enhanced)", "Attenuated at protein relative to RNA (RNA-Protein attenuated)")
plot_mat[1,1] <- sum(ii_rna_ribo_enhanced*ii_rna_pro_enhanced)
plot_mat[1,2] <- sum(ii_rna_ribo_enhanced*ii_rna_pro_attenuated)
plot_mat[2,1] <- sum(ii_rna_ribo_attenuated*ii_rna_pro_enhanced)
plot_mat[2,2] <- sum(ii_rna_ribo_attenuated*ii_rna_pro_attenuated)
plot_mat
binom.test(plot_mat[2,2], rowSums(plot_mat)[2])
plot_mat
## Set working directories
dir <- "~/Dropbox/riboRNAShared"
rdadir <- file.path(dir,"rdas")
codedir <- file.path(dir,"codes")
## Set working directories
dir <- "~/Dropbox/riboRNAShared"
rdadir <- file.path(dir,"rdas")
codedir <- file.path(dir,"codes")
## Use broman package for colors
require(broman)
crayon <- brocolors("crayons")
source(file.path( codedir, "prepareDivergencePlots.R") )
source(file.path( codedir, "plotDivergenceScatter.r") )
## Extract measurements for easy plotting
xy.rnapro = data.frame(rna=dmat_unnormed$rna,
pro=dmat_unnormed$pro)
xy.riborna = data.frame(rna=dmat_unnormed$rna,
ribo=dmat_unnormed$ribo)
xy.ribopro = data.frame(ribo=dmat_unnormed$ribo,
pro=dmat_unnormed$pro)
ii_riboGTrna = res.riborna$int.qval<.01 & (abs(xy.riborna$ribo) > abs(xy.riborna$rna))
ii_rnaGTribo = res.riborna$int.qval<.01 & (abs(xy.riborna$ribo) < abs(xy.riborna$rna))
ii_rnaGTpro = res.rnapro$int.qval<.01 & ( (abs(xy.rnapro$rna) > abs(xy.rnapro$pro)) | (xy.rnapro$rna * xy.rnapro$pro < 0) )
ii_proGTrna = res.rnapro$int.qval<.01 & ( (abs(xy.rnapro$pro) > abs(xy.rnapro$rna)) & (xy.rnapro$rna * xy.rnapro$pro > 0 ) )
ii_proNULLrna = (!(ii_rnaGTpro|ii_proGTrna))
## Set working directories
dir <- "~/Dropbox/riboRNAShared"
rdadir <- file.path(dir,"rdas")
codedir <- file.path(dir,"codes")
## Use broman package for colors
require(broman)
crayon <- brocolors("crayons")
source(file.path( codedir, "prepareDivergencePlots.R") )
source(file.path( codedir, "plotDivergenceScatter.r") )
## Extract measurements for easy plotting
xy.rnapro = data.frame(rna=dmat_unnormed$rna,
pro=dmat_unnormed$pro)
xy.riborna = data.frame(rna=dmat_unnormed$rna,
ribo=dmat_unnormed$ribo)
xy.ribopro = data.frame(ribo=dmat_unnormed$ribo,
pro=dmat_unnormed$pro)
ii_riboGTrna = res.riborna$int.qval<.01 & (abs(xy.riborna$ribo) > abs(xy.riborna$rna))
ii_rnaGTribo = res.riborna$int.qval<.01 & (abs(xy.riborna$ribo) < abs(xy.riborna$rna))
ii_rnaGTpro = res.rnapro$int.qval<.01 & ( (abs(xy.rnapro$rna) > abs(xy.rnapro$pro)) | (xy.rnapro$rna * xy.rnapro$pro < 0) )
# Attenuated divergence
ii_rnaGTpro = res.rnapro$int.qval<.01 & ( (abs(xy.rnapro$rna) > abs(xy.rnapro$pro)) | (xy.rnapro$rna * xy.rnapro$pro < 0) )
# Enhanced divegence
ii_proGTrna = res.rnapro$int.qval<.01 & ( (abs(xy.rnapro$pro) > abs(xy.rnapro$rna)) & (xy.rnapro$rna * xy.rnapro$pro > 0 ) )
# Null divergence
ii_proNULLrna = (!(ii_rnaGTpro|ii_proGTrna))
ii_subset1 <- dmat_unnormed$rna*dmat_unnormed$ribo < 0
ii_subset2 <- abs(dmat_unnormed$ribo) < abs(dmat_unnormed$rna)
ii_sub <- ii_subset1 | ii_subset2
ii_attenuated_translation <- (res.riborna$int.qval<.01)*ii_sub
index_list <- list(ii_proNULLrna, ii_rnaGTpro, ii_proGTrna)
boxplot(abs(dmat_unnormed$rna[ii_rnaGTpro]),
abs(dmat_unnormed$ribo[ii_rnaGTpro]),
abs(dmat_unnormed$pro[ii_rnaGTpro]),
axes = F, ylim = c(0, 10))
axis(1, at = c(1,2,3), labels = c("RNA", "Ribo", "Protein"),
col = "white")
axis(2)
points_cols <- c("Scarlet", "Sunglow", "Shamrock")
points(rep(1, sum(ii_rnaGTpro)), abs(dmat_unnormed$rna[ii_rnaGTpro]),
pch = 19, cex = .5,
col = crayon[points_cols[1]] )
points(rep(2, sum(ii_rnaGTpro)), abs(dmat_unnormed$ribo[ii_rnaGTpro]),
pch = 19, cex = .5,
col = crayon[points_cols[2]] )
points(rep(3, sum(ii_rnaGTpro)), abs(dmat_unnormed$pro[ii_rnaGTpro]),
pch = 19, cex = .5,
col = crayon[points_cols[3]] )
ii_subset1 <- dmat_unnormed$rna*dmat_unnormed$ribo < 0
ii_subset2 <- abs(dmat_unnormed$ribo) < abs(dmat_unnormed$rna)
ii_sub <- ii_subset1 | ii_subset2
ii_attenuated_translation <- (res.riborna$int.qval<.01)*ii_sub
## RNA > Protein
index_list <- list(ii_proNULLrna, ii_rnaGTpro, ii_proGTrna)
boxplot(abs(dmat_unnormed$rna[ii_rnaGTpro]),
abs(dmat_unnormed$ribo[ii_rnaGTpro]),
abs(dmat_unnormed$pro[ii_rnaGTpro]),
axes = F, ylim = c(0, 10))
axis(1, at = c(1,2,3), labels = c("RNA", "Ribo", "Protein"),
col = "white")
axis(2)
points_cols <- c("Scarlet", "Sunglow", "Shamrock")
points(rep(1, sum(ii_rnaGTpro)), abs(dmat_unnormed$rna[ii_rnaGTpro]),
pch = 19, cex = .5,
col = crayon[points_cols[1]] )
points(rep(2, sum(ii_rnaGTpro)), abs(dmat_unnormed$ribo[ii_rnaGTpro]),
pch = 19, cex = .5,
col = crayon[points_cols[2]] )
points(rep(3, sum(ii_rnaGTpro)), abs(dmat_unnormed$pro[ii_rnaGTpro]),
pch = 19, cex = .5,
col = crayon[points_cols[3]] )
text(2.2, 9, adj = 0,
label = paste("RNA > Protein", sum(ii_rnaGTpro),
"genes" ) )
text(2.2, 8, adj = 0,
label = paste("RNA vs. Ribo sig. diff.",
sum(ii_rnaGTpro*(res.riborna$int.qval<.01)),
"genes; \n",
round(100*sum(ii_rnaGTpro*(res.riborna$int.qval<.01))/sum(ii_rnaGTpro), 2),"%") )
text(2.2, 7, adj = 0,
label = paste("Attenuated at translation",
sum(ii_rnaGTpro*ii_attenuated_translation), "genes; \n",
round(100*sum(ii_rnaGTpro*ii_attenuated_translation)/sum(ii_rnaGTpro), 2),"%") )
title(main = paste("RNA > Protein",sum(ii_rnaGTpro),
"genes (Enhanced divergence)"),
ylab = "absolute divergence (human-chimpanzee fold change)")
ii_subset1 <- dmat_unnormed$rna * dmat_unnormed$ribo > 0
ii_subset1 <- dmat_unnormed$rna * dmat_unnormed$ribo > 0
ii_subset2 <- abs(dmat_unnormed$ribo) > abs(dmat_unnormed$rna)
ii_sub <- ii_subset1 & ii_subset2
ii_subset1 <- dmat_unnormed$rna * dmat_unnormed$ribo > 0
ii_subset2 <- abs(dmat_unnormed$ribo) > abs(dmat_unnormed$rna)
ii_sub <- ii_subset1 & ii_subset2
ii_sam <- ii_proGTrna * (res.ribopro$int.qval<.01) * ii_subset1
ii_reinforced_translation <- (res.riborna$int.qval<.01)*ii_sub
index_list <- list(ii_proNULLrna, ii_rnaGTpro, ii_proGTrna)
boxplot(abs(dmat_unnormed$rna[ii_proGTrna]),
abs(dmat_unnormed$ribo[ii_proGTrna]),
abs(dmat_unnormed$pro[ii_proGTrna]),
axes = F, ylim = c(0, 10))
axis(1, at = c(1,2,3), labels = c("RNA", "Ribo", "Protein"),
col = "white")
axis(2)
points_cols <- c("Scarlet", "Sunglow", "Shamrock")
points(rep(1, sum(ii_proGTrna)), abs(dmat_unnormed$rna[ii_proGTrna]),
pch = 19, cex = .5,
col = crayon[points_cols[1]] )
points(rep(2, sum(ii_proGTrna)), abs(dmat_unnormed$ribo[ii_proGTrna]),
pch = 19, cex = .5,
col = crayon[points_cols[2]] )
points(rep(3, sum(ii_proGTrna)), abs(dmat_unnormed$pro[ii_proGTrna]),
pch = 19, cex = .5,
col = crayon[points_cols[3]] )
text(1.5, 9, adj = 0,
label = paste("Protein > RNA", sum(ii_proGTrna), "genes" ) )
text(1.5, 8, adj = 0,
label = paste("RNA vs. Ribo sig. diff.",
sum(ii_proGTrna*(res.riborna$int.qval<.01)), "genes; \n",
round(100*sum(ii_proGTrna*(res.riborna$int.qval<.01))/sum(ii_proGTrna),2),
"%") )
## RNA < Protein
index_list <- list(ii_proNULLrna, ii_rnaGTpro, ii_proGTrna)
boxplot(abs(dmat_unnormed$rna[ii_proGTrna]),
abs(dmat_unnormed$ribo[ii_proGTrna]),
abs(dmat_unnormed$pro[ii_proGTrna]),
axes = F, ylim = c(0, 10))
axis(1, at = c(1,2,3), labels = c("RNA", "Ribo", "Protein"),
col = "white")
axis(2)
points_cols <- c("Scarlet", "Sunglow", "Shamrock")
points(rep(1, sum(ii_proGTrna)), abs(dmat_unnormed$rna[ii_proGTrna]),
pch = 19, cex = .5,
col = crayon[points_cols[1]] )
points(rep(2, sum(ii_proGTrna)), abs(dmat_unnormed$ribo[ii_proGTrna]),
pch = 19, cex = .5,
col = crayon[points_cols[2]] )
points(rep(3, sum(ii_proGTrna)), abs(dmat_unnormed$pro[ii_proGTrna]),
pch = 19, cex = .5,
col = crayon[points_cols[3]] )
text(1.5, 9, adj = 0,
label = paste("Protein > RNA", sum(ii_proGTrna), "genes" ) )
text(1.5, 8, adj = 0,
label = paste("RNA vs. Ribo sig. diff.",
sum(ii_proGTrna*(res.riborna$int.qval<.01)), "genes; \n",
round(100*sum(ii_proGTrna*(res.riborna$int.qval<.01))/sum(ii_proGTrna),2),
"%") )
text(1.5, 7, adj = 0,
label = paste("RNA vs. Ribo sig. diff. & same direction",
sum(ii_sam), "genes; \n",
round(100*sum(ii_sam)/sum(ii_proGTrna),
2),"%") )
text(1.5, 6, adj = 0,
label = paste("Reinfored at translation",
sum(ii_proGTrna*ii_reinforced_translation), "genes; \n",
round(100*sum(ii_proGTrna*ii_reinforced_translation)/sum(ii_proGTrna),
2),"%") )
title(main = paste("RNA < Protein",sum(ii_proGTrna),
"genes (Enhanced protein divergence)"),
ylab = "absolute divergence (human-chimpanzee fold change)")
sum(ii_proNULLrna)
sum(ii_proNULLrna*(res.riborna$int.qval <.01))
ii_enhanced_set <- (dmat_unnormed$rna * dmat_unnormed$ribo > 0) & ( abs(dmat_unnormed$ribo) > abs(dmat_unnormed$rna) )
ii_attenuated_set <- (dmat_unnormed$rna * dmat_unnormed$ribo < 0) | ( abs(dmat_unnormed$ribo) < abs(dmat_unnormed$rna) )
## RNA ~ Protein
index_list <- list(ii_proNULLrna, ii_rnaGTpro, ii_proGTrna)
boxplot(abs(dmat_unnormed$rna[ii_proNULLrna]),
abs(dmat_unnormed$ribo[ii_proNULLrna]),
abs(dmat_unnormed$pro[ii_proNULLrna]),
axes = F, ylim = c(0, 10))
axis(1, at = c(1,2,3), labels = c("RNA", "Ribo", "Protein"),
col = "white")
axis(2)
points_cols <- c("Scarlet", "Sunglow", "Shamrock")
points(rep(1, sum(ii_proNULLrna)), abs(dmat_unnormed$rna[ii_proNULLrna]),
pch = 19, cex = .5,
col = crayon[points_cols[1]] )
points(rep(2, sum(ii_proNULLrna)), abs(dmat_unnormed$ribo[ii_proNULLrna]),
pch = 19, cex = .5,
col = crayon[points_cols[2]] )
points(rep(3, sum(ii_proNULLrna)), abs(dmat_unnormed$pro[ii_proNULLrna]),
pch = 19, cex = .5,
col = crayon[points_cols[3]] )
text(2.5, 10, adj = 0,
label = paste("RNA ~ Protein", sum(ii_proNULLrna), "genes" ) )
text(2.5, 9, adj = 0,
label = paste("RNA vs. Ribo sig. diff.",
sum(ii_proNULLrna*(res.riborna$int.qval<.01)), "genes; \n",
round(100*sum(ii_proNULLrna*(res.riborna$int.qval<.01))/sum(ii_proNULLrna), 2),
"%") )
text(2.5, 8, adj = 0,
label = paste("Attenuated translation",
sum(ii_proNULLrna*(res.riborna$int.qval<.01)*ii_attenuated_set),
"genes; \n",
round(100*sum(ii_proNULLrna*(res.riborna$int.qval<.01)*ii_attenuated_set)/sum(ii_proNULLrna), 2),
"%") )
text(2.5, 7, adj = 0,
label = paste("Reinforced translation",
sum(ii_proNULLrna*(res.riborna$int.qval<.01)*ii_enhanced_set),
"genes; \n",
round(100*sum(ii_proNULLrna*(res.riborna$int.qval<.01)*ii_enhanced_set)/sum(ii_proNULLrna), 2),
"%") )
title(main = "RNA ~ Protein, no sig. diff. divergence",
ylab = "absolute divergence (human-chimpanzee fold change)")
# Compute pairwise p-values between effect sizes of Ribo, RNA, and protein
# among genes with RNA ~ Protein
rna_ribo_t <- t.test( abs(dmat_unnormed$rna[ii_proNULLrna]),
abs(dmat_unnormed$ribo[ii_proNULLrna]), paired = TRUE )
rna_pro_t <- t.test( abs(dmat_unnormed$rna[ii_proNULLrna]),
abs(dmat_unnormed$pro[ii_proNULLrna]), paired = TRUE )
ribo_pro_t <- t.test( abs(dmat_unnormed$ribo[ii_proNULLrna]),
abs(dmat_unnormed$pro[ii_proNULLrna]), paired = TRUE )
rna_ribo_t
rna_pro_t
ribo_pro_t
ii_select <- ii_proNULLrna*(res.riborna$int.qval<.01)
sub_data <- dmat_unnormed[which(ii_select==1), ]
ii_rna_ribo_enhanced <- (sub_data$rna * sub_data$ribo > 0) & ( abs(sub_data$ribo) > abs(sub_data$rna) )
ii_rna_ribo_attenuated <- (sub_data$rna * sub_data$ribo < 0) | ( abs(sub_data$ribo) < abs(sub_data$rna) )
ii_rna_pro_enhanced <- (sub_data$rna * sub_data$pro > 0) & ( abs(sub_data$pro) > abs(sub_data$rna) )
ii_rna_pro_attenuated <- (sub_data$rna * sub_data$pro < 0) | ( abs(sub_data$pro) < abs(sub_data$rna) )
plot_mat <- matrix(0, 2, 2)
rownames(plot_mat) <- c("Enhanced at translation relative to RNA (RNA-Ribo enhanced)", "Attenuated at translation relative to RNA (RNA-Ribo attenuated)")
colnames(plot_mat) <- c("Enhanced at protein relative to RNA (RNA-Protein enhanced)", "Attenuated at protein relative to RNA (RNA-Protein attenuated)")
plot_mat[1,1] <- sum(ii_rna_ribo_enhanced*ii_rna_pro_enhanced)
plot_mat[1,2] <- sum(ii_rna_ribo_enhanced*ii_rna_pro_attenuated)
plot_mat[2,1] <- sum(ii_rna_ribo_attenuated*ii_rna_pro_enhanced)
plot_mat[2,2] <- sum(ii_rna_ribo_attenuated*ii_rna_pro_attenuated)
plot_mat
binom.test(plot_mat[1,1], rowSums(plot_mat)[1])
binom.test(plot_mat[2,2], rowSums(plot_mat)[2])
266/285
ii_subset1 <- dmat_unnormed$rna * dmat_unnormed$ribo > 0
ii_subset2 <- abs(dmat_unnormed$ribo) > abs(dmat_unnormed$rna)
ii_sub <- ii_subset1 & ii_subset2
ii_sam <- ii_proGTrna * (res.ribopro$int.qval<.01) * ii_subset1
sum(ii_sam)
ii_subset1 <- dmat_unnormed$rna * dmat_unnormed$ribo > 0
ii_subset2 <- abs(dmat_unnormed$ribo) > abs(dmat_unnormed$rna)
ii_sub <- ii_subset1 & ii_subset2
ii_sam <- ii_proGTrna * (res.riborna$int.qval<.01) * ii_subset1
sum(ii_sam)
binom.test(84, 294)
binom.test(5, 17)
binom.test(5,17)
binom.test(84,294)
sum(ii_proGTrna*ii_reinforced_translation)
sum(ii_proGTrna)
binom.test(sum(ii_proGTrna*ii_reinforced_translation),
sum(ii_proGTrna))
binom.test(5,17)
?binom.test
binom.test(5,17, "less")
binom.test(5,17, p=.5, "less")
sum(ii_rnaGTpro*ii_attenuated_translation)
sum(ii_rnaGTpro)
binom.test( sum(ii_rnaGTpro*ii_attenuated_translation),
sum(ii_rnaGTpro))
1.305e-13 < 1e-12
285/2877
binom.test( sum(ii_rnaGTpro*ii_attenuated_translation),
sum(ii_rnaGTpro), p = .099)
90/2877
binom.test(sum(ii_proGTrna*ii_reinforced_translation),
sum(ii_proGTrna), p = .0313)
Sys.time()
require(varComp)
150*.8
library(Biobase)
## Set working directories
dir <- "../"
figdir <- file.path(dir,"figures")
rdadir <- file.path(dir,"rdas")
datadir <- file.path(dir, "data")
## Use broman package for colors
require(broman)
crayon <- brocolors("crayons")
## Load customized packages
require(devtools)
require(Humanzee)
sessionInfo()
require(qvalue)
sessionInfo()
remove.packages("qvalue")
?install.packages
?install.packages
require(devtools)
getwd()
install.packages("Downloads/qvalue_1.38.0.tar.gz", repos = NULL, type = "source")
capabilities("tcltk")
library(tcltk)
sessionInfo()
ls()
rm(list=ls())
library(tcltk)
sessionInfo()
require(qvalue)
install.packages("Downloads/qvalue_1.38.0.tar.gz", repos=NULL, source = TRUE)
## load LRT results of Ribo vs. RNA divergence
load(file.path(rdadir,"TEnew.rda"))
## Compute fold changes based on un-normalized data
## from the object eSetRRP.log2 in eSetRRP.rda
load(file.path(rdadir,"eSetRRP.rda"))
eSet.temp = eSetRRP.log2[ ,eSetRRP.log2$species!="rhesus"]
fc.mat=lapply(seq_along(c("human","chimp")), function(i) {
ii = eSet.temp$species==c("human","chimp")[i]
eSet.tt = eSet.temp[,ii]
emat = lapply(seq_along(c("ribo","rna","protein")),function(j) {
jj = eSet.tt$seqData==c("ribo","rna","protein")[j]
rowMeans(exprs(eSet.tt[,jj]),na.rm=TRUE)
})
emat=do.call(cbind,emat)
colnames(emat)=c("ribo","rna","protein")
return(data.frame(emat))
})
names(fc.mat)=c("human","chimp")
dmat_unnormed = data.frame(ribo=fc.mat$human$ribo-fc.mat$chimp$ribo,
rna=fc.mat$human$rna-fc.mat$chimp$rna,
pro=fc.mat$human$protein-fc.mat$chimp$protein)
xy.rnapro = data.frame(rna=dmat_unnormed$rna,
pro=dmat_unnormed$pro)
xy.riborna = data.frame(rna=dmat_unnormed$rna,
ribo=dmat_unnormed$ribo)
xy.ribopro = data.frame(ribo=dmat_unnormed$ribo,
pro=dmat_unnormed$pro)
library(Biobase)
## Set working directories
dir <- "../"
figdir <- file.path(dir,"figures")
rdadir <- file.path(dir,"rdas")
datadir <- file.path(dir, "data")
## Use broman package for colors
require(broman)
crayon <- brocolors("crayons")
## Load customized packages
require(devtools)
require(Humanzee)
## load LRT results of Ribo vs. RNA divergence
load(file.path(rdadir,"TEnew.rda"))
## Compute fold changes based on un-normalized data
## from the object eSetRRP.log2 in eSetRRP.rda
load(file.path(rdadir,"eSetRRP.rda"))
eSet.temp = eSetRRP.log2[ ,eSetRRP.log2$species!="rhesus"]
fc.mat=lapply(seq_along(c("human","chimp")), function(i) {
ii = eSet.temp$species==c("human","chimp")[i]
eSet.tt = eSet.temp[,ii]
emat = lapply(seq_along(c("ribo","rna","protein")),function(j) {
jj = eSet.tt$seqData==c("ribo","rna","protein")[j]
rowMeans(exprs(eSet.tt[,jj]),na.rm=TRUE)
})
emat=do.call(cbind,emat)
colnames(emat)=c("ribo","rna","protein")
return(data.frame(emat))
})
names(fc.mat)=c("human","chimp")
dmat_unnormed = data.frame(ribo=fc.mat$human$ribo-fc.mat$chimp$ribo,
rna=fc.mat$human$rna-fc.mat$chimp$rna,
pro=fc.mat$human$protein-fc.mat$chimp$protein)
xy.rnapro = data.frame(rna=dmat_unnormed$rna,
pro=dmat_unnormed$pro)
xy.riborna = data.frame(rna=dmat_unnormed$rna,
ribo=dmat_unnormed$ribo)
xy.ribopro = data.frame(ribo=dmat_unnormed$ribo,
pro=dmat_unnormed$pro)
rdadir
getwd()
SessionInfo()
sessionInfo()
library(plyr)
library(mvtnorm)
library(nlme)
library(blme)
library(MCMCglmm)
library(matrixStats)
make_data_generator <- function(fixed_coef = c(1, 3, 1),
resid_var = 1,
ranef_covar_level1 = diag(sigma_a^2),
ranef_covar_level2 = diag(sigma_b^2),
nn_level1 = 3,
nn_level2 = 3,
nn_level3 = 3
)
{
# create design matrix
pheno_fixed <- data.frame(var1 = rep(1:nn_level1,
each = nn_level2*nn_level3))
design_fixed <- model.matrix( ~ 1 + as.factor(var1), data = pheno_fixed)
pheno_random <- data.frame(var2 = rep( rep(1:nn_level2,
each = nn_level3), nn_level1 ) )
design_random <- model.matrix( ~ as.factor(var2), data = pheno_random)
generate_data <- function() {
# sample data set under mixed effects model
simulated_data <- rdply(nn_level1, {
rand_coef_level1 <- t( rmvnorm( n = 1, sigma = ranef_covar_level1 ) )
rand_coef_level2 <- t( rmvnorm( n = 1, sigma = ranef_covar_level2 ) )
epsilon <- rnorm(n = length(nn_level1*nn_level2*nn_level3),
mean = 0, sd = sqrt(resid_var))
obs <- design_fixed %*% rand_coef_level2 +
design_random %*% rand_coef_level2 + epsilon
data.frame(obs = obs,
pheno_fixed = as.factor(pheno_fixed$var1),
pheno_random = as.factor(pheno_random$var2) )
})
names(simulated_data)[1] <- "individual"
simulated_data
}
}
fit_models <- function(simulated_data) {
# fit models and extract coefs
# nlme package
nlme_varest <- as.numeric(VarCorr( lme(obs ~ 1,
random = ~ 1|pheno_fixed/pheno_random,
simulated_data ) )[c(2,4,5), 1])
# blme
blme_varest <- as.data.frame(
VarCorr( blmer(obs ~ 1 | pheno_fixed/pheno_random,
data = simulated_data, cov.prior = wishart,
resid.prior = invgamma) ) )[ c(2,1,3) ,4]
# MCMCglmm
MCMCglmm_fit <- MCMCglmm(obs~1,
random = ~ pheno_fixed + pheno_fixed:pheno_random,
data = simulated_data, verbose = FALSE)
mcmc_varest <- colMeans(MCMCglmm_fit$VCV)
mcmc_varest_var <- colVars(MCMCglmm_fit$VCV)
# format output all pretty
rbind(
data.frame(model='nlme', predictor = c("level1", "level2", "level3"),
varest = nlme_varest, varest_var = rep(NA, 3) ),
data.frame(model='blme', predictor = c("level1", "level2", "level3"),
varest = blme_varest, varest_var = rep(NA, 3) ),
data.frame(model='MCMCglmm', predictor = c("level1", "level2", "level3"),
varest = mcmc_varest, varest_var = mcmc_varest_var)
)
}
nn_level1 <- 3
nn_level2 <- 3
nn_level3 <- 3
sigma_a <- rep(.4, nn_level1)
sigma_b <- rep(.3, nn_level2)
sigma_e <- 1
mu <- c(1, 3, 1)
gen_data <- make_data_generator(fixed_coef = mu,
resid_var = sigma_e^2,
ranef_covar_level1 = diag(sigma_a^2),
ranef_covar_level2 = diag(sigma_b^2),
nn_level1 = nn_level1,
nn_level2 = nn_level2,
nn_level3 = nn_level3)
simu_data <- rdply(.n = 100, fit_models(gen_data()))
head(simu_data)
mean <- daply(simu_data, .(model, predictor), function(df) {
mean(df$varest)
})
mean
standard_error <- daply(simu_data, .(model, predictor), function(df) {
sqrt(var(df$varest)/100)
})
standard_error
getwd()
setwd("~/Dropbox/GitHub/metagenomics/project/")
getwd()
getwd()
