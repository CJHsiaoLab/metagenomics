install_github('kkdey/CountClust')
library(CountClust)
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
omega <- omega[which(finer_subtype!="(none)"),];
finer_subtype <- finer_subtype[which(finer_subtype!="(none)")];
samp_metadata <- finer_subtype; colnames(samp_metadata) <- "cell_subtype"
obj <- structureObj_omega(omega,samp_metadata = samp_metadata, tol=0.001,
batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),
control <- list(struct.width=800, struct.height=300));
}
dim(samp_metadata)
dim(omega)
colnames(samp_metadata) <- cell_type;
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
omega <- omega[which(finer_subtype!="(none)"),];
finer_subtype <- finer_subtype[which(finer_subtype!="(none)")];
samp_metadata <- cbind.data.frame(finer_subtype); colnames(samp_metadata) <- "cell_subtype"
obj <- structureObj_omega(omega,samp_metadata = samp_metadata, tol=0.001,
batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),
control <- list(struct.width=800, struct.height=300));
}
docweights <- as.matrix(omega);
nclus <- dim(docweights)[2];
num_metadata <- dim(samp_metadata)[2];
num <- 1
metadata_vec <- samp_metadata[,num];
metadata_ordered <- metadata_vec[order(metadata_vec)];
docweights_ordered <- docweights[order(metadata_vec),];
png(filename=paste0(path,'/struct_clus_',nclus,'_',colnames(samp_metadata)[num],'.png'),width=struct.width, height=struct.height);
barplot(t(docweights_ordered),col=2:(nclus+1),axisnames=F,space=0,border=NA,
main=paste("Structure arranged by",colnames(samp_metadata)[num],": topics=",nclus),
las=las,ylim=c(0,1),ylab="admix prop", xlab=paste0(colnames(samp_metadata)[num]),
cex.axis=cex.axis,cex.main=cex.main);
labels = match(unique(metadata_ordered), metadata_ordered);
control.default <- list(struct.width=800, struct.height=250, cex.axis=0.5, cex.main=1.5, las=2);
namc=names(control)
if (!all(namc %in% names(control.default)))
stop("unknown names in control: ", namc[!(namc %in% names(control.default))])
control=modifyList(control.default, control)
struct.width <- control$struct.width;
struct.height <- control$struct.height;
cex.axis <- control$cex.axis;
cex.main <- control$cex.main;
las <- control$las;
metadata_vec <- samp_metadata[,num];
metadata_ordered <- metadata_vec[order(metadata_vec)];
docweights_ordered <- docweights[order(metadata_vec),];
png(filename=paste0(path,'/struct_clus_',nclus,'_',colnames(samp_metadata)[num],'.png'),width=struct.width, height=struct.height);
barplot(t(docweights_ordered),col=2:(nclus+1),axisnames=F,space=0,border=NA,
main=paste("Structure arranged by",colnames(samp_metadata)[num],": topics=",nclus),
las=las,ylim=c(0,1),ylab="admix prop", xlab=paste0(colnames(samp_metadata)[num]),
cex.axis=cex.axis,cex.main=cex.main);
labels = match(unique(metadata_ordered), metadata_ordered);
if(partition[num]=='TRUE') abline(v=labels-1)
path
labels_low=labels-1;
labels_up=c(labels_low[2:length(labels_low)],dim(docweights_ordered)[1]);
mid_point <- labels_low +0.5*(labels_up-labels_low);
axis(1,at=mid_point, unique(metadata_ordered),las=las,cex.axis=cex.axis);
mid_point
unique(metadata_ordered)
samp_metadata
finer_subtype
unique(samp_metadata)
finer_subtype = data[9,-(1:2)];
finer_subtype <- as.vector(finer_subtype[which(finer_subtype!="(none)")]);
samp_metadata <- cbind.data.frame(finer_subtype); colnames(samp_metadata) <- "cell_subtype"
samp_metadata
finer_subtype1 <- as.vector(finer_subtype[which(finer_subtype!="(none)")]);
samp_metadata <- cbind(finer_subtype1); colnames(samp_metadata) <- "cell_subtype"
samp_metadata
dim(samp_metadata)
finer_subtype1
class(finer_subtype1)
finer_subtype1 <- as.matrix(finer_subtype[which(finer_subtype!="(none)")]);
finer_subtype1
finer_subtype1 <- as.vector(as.matrix(finer_subtype[which(finer_subtype!="(none)")]));
finer_subtype1
samp_metadata <- cbind.data.frame(finer_subtype1); colnames(samp_metadata) <- "cell_subtype"
samp_metadata
finer_subtype = data[9,-(1:2)];
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
omega <- omega[which(finer_subtype!="(none)"),];
finer_subtype1 <- as.vector(as.matrix(finer_subtype[which(finer_subtype!="(none)")]));
samp_metadata <- cbind.data.frame(finer_subtype1); colnames(samp_metadata) <- "cell_subtype"
obj <- structureObj_omega(omega,samp_metadata = samp_metadata, tol=0.001,
batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),
control <- list(struct.width=800, struct.height=300));
}
ncol <- samp_metadata
ncol(samp_metadata)
finer_subtype = data[9,-(1:2)];
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
omega <- omega[which(finer_subtype!="(none)"),];
finer_subtype1 <- as.vector(as.matrix(finer_subtype[which(finer_subtype!="(none)")]));
samp_metadata <- cbind.data.frame(finer_subtype1); colnames(samp_metadata) <- "cell_subtype"
obj <- structureObj_omega(omega,samp_metadata = samp_metadata, tol=0.001,
batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),
partition=rep('TRUE',ncol(samp_metadata)),
control <- list(struct.width=800, struct.height=300));
}
finer_subtype = data[9,-(1:2)];
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
omega <- omega[which(finer_subtype!="(none)"),];
finer_subtype1 <- as.vector(as.matrix(finer_subtype[which(finer_subtype!="(none)")]));
samp_metadata <- cbind.data.frame(finer_subtype1); colnames(samp_metadata) <- "cell_subtype"
obj <- structureObj_omega(omega,samp_metadata = samp_metadata, tol=0.001,
batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),
partition=rep('TRUE',ncol(samp_metadata)),
control <- list(struct.width=800, struct.height=300,cex.axis=2));
}
install_github(('kkdey/CountClust')
)
library(CountClust)
finer_subtype = data[9,-(1:2)];
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
omega <- omega[which(finer_subtype!="(none)"),];
finer_subtype1 <- as.vector(as.matrix(finer_subtype[which(finer_subtype!="(none)")]));
samp_metadata <- cbind.data.frame(finer_subtype1); colnames(samp_metadata) <- "cell_subtype"
obj <- structureObj_omega(omega,samp_metadata = samp_metadata, tol=0.001,
batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),
partition=rep('TRUE',ncol(samp_metadata)),
control <- list(struct.width=800, struct.height=300,cex.axis=1,lwd=3));
}
length(unique(finer_subtype))
length(unique(finer_subtype1))
cell_type = unlist(lapply(strsplit(rownames(counts_data),"\\."),function(x) x[1]));
finer_subtype = data[9,-(1:2)];
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
omega <- omega[which(finer_subtype!="(none)"),];
finer_subtype1 <- as.vector(as.matrix(finer_subtype[which(finer_subtype!="(none)")]));
cell_type1 <- cell_type[which(finer_subtype!="(none)")];
samp_metadata <- cbind.data.frame(cell_type1,finer_subtype1); colnames(samp_metadata) <- c("cell_type","cell_subtype");
obj <- structureObj_omega(omega,samp_metadata = samp_metadata, tol=0.001,
batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),
partition=rep('TRUE',ncol(samp_metadata)),
control <- list(struct.width=800, struct.height=300,cex.axis=1,lwd=3));
}
ncol(samp_metadata)
par(mar=c(14,2,2,2))
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
omega <- omega[which(finer_subtype!="(none)"),];
finer_subtype1 <- as.vector(as.matrix(finer_subtype[which(finer_subtype!="(none)")]));
cell_type1 <- cell_type[which(finer_subtype!="(none)")];
samp_metadata <- cbind.data.frame(cell_type1,finer_subtype1); colnames(samp_metadata) <- c("cell_type","cell_subtype");
obj <- structureObj_omega(omega,samp_metadata = samp_metadata, tol=0.001,
batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),
partition=rep('TRUE',ncol(samp_metadata)),
control <- list(struct.width=800, struct.height=300,cex.axis=1,lwd=3));
}
par(mar=c(16,2,2,2))
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
omega <- omega[which(finer_subtype!="(none)"),];
finer_subtype1 <- as.vector(as.matrix(finer_subtype[which(finer_subtype!="(none)")]));
cell_type1 <- cell_type[which(finer_subtype!="(none)")];
samp_metadata <- cbind.data.frame(cell_type1,finer_subtype1); colnames(samp_metadata) <- c("cell_type","cell_subtype");
obj <- structureObj_omega(omega,samp_metadata = samp_metadata, tol=0.001,
batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),
partition=rep('TRUE',ncol(samp_metadata)),
control <- list(struct.width=800, struct.height=300,cex.axis=1,lwd=3));
}
install_github(('kkdey/CountClust')
)
library(CountClust)
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
omega <- omega[which(finer_subtype!="(none)"),];
finer_subtype1 <- as.vector(as.matrix(finer_subtype[which(finer_subtype!="(none)")]));
cell_type1 <- cell_type[which(finer_subtype!="(none)")];
samp_metadata <- cbind.data.frame(cell_type1,finer_subtype1); colnames(samp_metadata) <- c("cell_type","cell_subtype");
obj <- structureObj_omega(omega,samp_metadata = samp_metadata, tol=0.001,
batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),
partition=rep('TRUE',ncol(samp_metadata)),
control <- list(struct.width=800, struct.height=300,cex.axis=1,lwd=3));
}
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
omega <- omega[which(finer_subtype!="(none)"),];
finer_subtype1 <- as.vector(as.matrix(finer_subtype[which(finer_subtype!="(none)")]));
cell_type1 <- cell_type[which(finer_subtype!="(none)")];
samp_metadata <- cbind.data.frame(cell_type1,finer_subtype1); colnames(samp_metadata) <- c("cell_type","cell_subtype");
obj <- structureObj_omega(omega,samp_metadata = samp_metadata, tol=0.001,
batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),
partition=rep('TRUE',ncol(samp_metadata)),
control <- list(struct.width=800, struct.height=300,cex.axis=1,lwd=3,mar.bottom=12));
}
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
omega <- omega[which(finer_subtype!="(none)"),];
finer_subtype1 <- as.vector(as.matrix(finer_subtype[which(finer_subtype!="(none)")]));
cell_type1 <- cell_type[which(finer_subtype!="(none)")];
samp_metadata <- cbind.data.frame(cell_type1,finer_subtype1); colnames(samp_metadata) <- c("cell_type","cell_subtype");
obj <- structureObj_omega(omega,samp_metadata = samp_metadata, tol=0.001,
batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),
partition=rep('TRUE',ncol(samp_metadata)),
control <- list(struct.width=800, struct.height=300,cex.axis=1,lwd=3,mar.bottom=10,mar.left=2.2));
}
setwd('/Users/kushal/Documents/metagenomics/src')
setwd('/Users/kushal/Documents/metagenomics/project/cell_paper/')
load("cellPaperRaw.rdata")
pheno_data <- pData(cellPaper); # phenotype data (there are 62 columns in this)
age = pData(cellPaper)$Age_at_Collection
status = pData(cellPaper)$Case_Control
gender =pData(cellPaper)$gender;
omega <- as.matrix('Structure/batch_uncorrected/clus_2/omega_mat.txt');
plot(omega[,1]~age,pch=21,bty="l",ylab="admix proportion of red cluster",xlab="Age at collection")
library(metagenomeSeq)
library(CountClust)
library(maptpx)
load("cellPaperRaw.rdata")
pheno_data <- pData(cellPaper); # phenotype data (there are 62 columns in this)
age = pData(cellPaper)$Age_at_Collection
status = pData(cellPaper)$Case_Control
gender =pData(cellPaper)$gender;
omega <- as.matrix('Structure/batch_uncorrected/clus_2/omega_mat.txt');
plot(omega[,1]~age,pch=21,bty="l",ylab="admix proportion of red cluster",xlab="Age at collection")
length(age)
dim(omega)
omega <- as.matrix(read.table('Structure/batch_uncorrected/clus_2/omega_mat.txt'));
plot(omega[,1]~age,pch=21,bty="l",ylab="admix proportion of red cluster",xlab="Age at collection")
par(mfrow=c(1,1))
plot(omega[,1]~age,pch=21,bty="l",ylab="admix proportion of red cluster",xlab="Age at collection")
dev.off()
par(mfrow=c(1,1))
plot(omega[,1]~age,pch=21,bty="l",ylab="admix proportion of red cluster",xlab="Age at collection")
plot(omega[,1]~age,pch=21,bty="l",ylab="admix proportion of red cluster",xlab="Age at collection")
setwd('/Users/kushal/Documents/metagenomics/project/cell_paper/')
library(maptpx)
library(CountClust)
library(metagenomeSeq)
load("cellPaperRaw.rdata")
pheno_data <- pData(cellPaper); # phenotype data (there are 62 columns in this)
age = pData(cellPaper)$Age_at_Collection
status = pData(cellPaper)$Case_Control
gender =pData(cellPaper)$gender;
omega <- as.matrix(read.table('Structure/batch_uncorrected/clus_2/omega_mat.txt'));
par(mfrow=c(1,1))
plot(omega[,1]~age,pch=21,bty="l",ylab="admix proportion of red cluster",xlab="Age at collection")
plot(omega[,1]~age,pch=21,lwd=2, bty="l",ylab="admix proportion of red cluster",xlab="Age at collection")
index_red <- which(omega[,1] > 0.75);
index_red
index_red <- which(omega[,1] > 0.9);
index_green <- which(omega[,1] < 0.1)
index_red
index_green
index_red <- which(omega[,1] > 0.8);
index_green <- which(omega[,1] < 0.2)
index_red
index_green
counts = MRcounts(cellPaper)
dim(counts)
counts_preprocess <- handleNA(counts)$data;
counts_filtered <- RemoveSparseFeatures(counts_preprocess,0.99)$data;
dim(counts_filtered)
dim(omega)
dim(counts_preprocess)
counts = MRcounts(cellPaper);
counts <- t(counts);
counts_preprocess <- handleNA(counts)$data;
## Removing the sparse OTUs
counts_filtered <- RemoveSparseFeatures(counts_preprocess,0.99)$data;
dim(counts_filtered)
red_cluster_samples <- counts_filtered[index_red,];
green_cluster_samples <- counts_filtered[index_green,];
dim(red_cluster_samples)
dim(green_cluster_samples)
nclus_vec <- 2;
bayesfac <- array(0,length(nclus_vec));
samp_metadata <- cbind.data.frame(status);
colnames(samp_metadata) = c("Status");
for(num in 1:length(nclus_vec))
{
obj <- StructureObj(red_cluster_samples,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, data = batch_lab = NULL, path=paste0('post_Structure/red_cluster'), partition=c('TRUE'),
control=list(lwd=3,struct.width=600, struct.height=300));
}
for(num in 1:length(nclus_vec))
{
obj <- StructureObj(red_cluster_samples,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0('post_Structure/red_cluster'), partition=c('TRUE'),
control=list(lwd=3,struct.width=600, struct.height=300));
}
nclus_vec <- 2;
bayesfac <- array(0,length(nclus_vec));
status_red <- status[index_red];
samp_metadata <- cbind.data.frame(status_red);
colnames(samp_metadata) = c("Status");
for(num in 1:length(nclus_vec))
{
obj <- StructureObj(red_cluster_samples,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0('post_Structure/red_cluster'), partition=c('TRUE'),
control=list(lwd=3,struct.width=600, struct.height=300));
}
install_github('github/kkdey')
library(devtools)
install_github('github/kkdey')
install_github('kkdey/Countclust')
library(CountClust)
nclus_vec <- 2;
bayesfac <- array(0,length(nclus_vec));
status_red <- status[index_red];
samp_metadata <- cbind.data.frame(status_red);
colnames(samp_metadata) = c("Status");
for(num in 1:length(nclus_vec))
{
obj <- StructureObj(red_cluster_samples,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0('post_Structure/red_cluster'), partition=c('TRUE'),
control=list(lwd=3,struct.width=600, struct.height=300));
}
nclus_vec <- 2;
bayesfac <- array(0,length(nclus_vec));
status_green <- status[index_green];
samp_metadata <- cbind.data.frame(status_green);
colnames(samp_metadata) = c("Status");
for(num in 1:length(nclus_vec))
{
obj <- StructureObj(green_cluster_samples,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0('post_Structure/green_cluster'), partition=c('TRUE'),
control=list(lwd=3,struct.width=600, struct.height=300));
}
index_red <- which(omega[,1] > 0.95);
index_green <- which(omega[,1] < 0.05)
counts = MRcounts(cellPaper);
counts <- t(counts);
counts_preprocess <- handleNA(counts)$data;
## Removing the sparse OTUs
counts_filtered <- RemoveSparseFeatures(counts_preprocess,0.99)$data;
red_cluster_samples <- counts_filtered[index_red,];
green_cluster_samples <- counts_filtered[index_green,];
nclus_vec <- 2;
bayesfac <- array(0,length(nclus_vec));
status_red <- status[index_red];
samp_metadata <- cbind.data.frame(status_red);
colnames(samp_metadata) = c("Status");
for(num in 1:length(nclus_vec))
{
obj <- StructureObj(red_cluster_samples,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0('post_Structure/red_cluster'), partition=c('TRUE'),
control=list(lwd=3,struct.width=600, struct.height=300));
}
nclus_vec <- 2;
bayesfac <- array(0,length(nclus_vec));
status_green <- status[index_green];
samp_metadata <- cbind.data.frame(status_green);
colnames(samp_metadata) = c("Status");
for(num in 1:length(nclus_vec))
{
obj <- StructureObj(green_cluster_samples,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0('post_Structure/green_cluster'), partition=c('TRUE'),
control=list(lwd=3,struct.width=600, struct.height=300));
}
index_red <- which(omega[,1] > 0.9);
index_green <- which(omega[,1] < 0.1)
counts = MRcounts(cellPaper);
counts <- t(counts);
counts_preprocess <- handleNA(counts)$data;
## Removing the sparse OTUs
counts_filtered <- RemoveSparseFeatures(counts_preprocess,0.99)$data;
red_cluster_samples <- counts_filtered[index_red,];
green_cluster_samples <- counts_filtered[index_green,];
nclus_vec <- 2;
bayesfac <- array(0,length(nclus_vec));
status_red <- status[index_red];
samp_metadata <- cbind.data.frame(status_red);
colnames(samp_metadata) = c("Status");
for(num in 1:length(nclus_vec))
{
obj <- StructureObj(red_cluster_samples,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0('post_Structure/red_cluster'), partition=c('TRUE'),
control=list(lwd=3,struct.width=600, struct.height=300));
}
nclus_vec <- 2;
bayesfac <- array(0,length(nclus_vec));
status_green <- status[index_green];
samp_metadata <- cbind.data.frame(status_green);
colnames(samp_metadata) = c("Status");
for(num in 1:length(nclus_vec))
{
obj <- StructureObj(green_cluster_samples,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0('post_Structure/green_cluster'), partition=c('TRUE'),
control=list(lwd=3,struct.width=600, struct.height=300));
}
dim(counts_filtered)
g=1;
out <- glm(counts_filtered[,g] ~ age + as.factor(status), family='poisson');
out
out$coefficients[3]
out <- as.numeric(glm(counts_filtered[,g] ~ age + as.factor(status), family='poisson')$coefficients[3]);
out
pval_otu <- array(0,dim(counts_filtered)[2]);
for(g in 1:dim(counts_filtered)[2])
{
pval_otu[g] <- as.numeric(glm(counts_filtered[,g] ~ age + as.factor(status), family='poisson')$coefficients[3]);
}
pval_otu
out <- glm(counts_filtered[,g] ~ age + as.factor(status), family='poisson');
out
summary(out)
summary(out)$coefficients
summary(out)$coefficients[3,1]
summary(out)$coefficients[3,4]
betaval_otu <- array(0,dim(counts_filtered)[2]);
sd_betaval_otu <- array(0,dim(counts_filtered)[2]);
pval_otu <- array(0,dim(counts_filtered)[2]);
for(g in 1:dim(counts_filtered)[2])
{
out <- glm(counts_filtered[,g] ~ age + as.factor(status), family='poisson');
betaval_otu[g] <- summary(out)$coefficients[3,1];
sd_betaval_otu[g] <- summary(out)$coefficients[3,2]
pval_otu[g] <- summary(out)$coefficients[3,4]
}
pval_otu
effect_size <- ash(betaval_otu, sd_betaval_otu)$PosteriorMean;
library(ashr)
effect_size <- ash(betaval_otu, sd_betaval_otu)$PosteriorMean;
?ash
betaval_otu
which(is.na(betaval_otu)==TRUE)
which(is.na(sd_betaval_otu)==TRUE)
sd_betaval_otu
effect_size <- ash(betaval_otu, sd_betaval_otu, mixcompdist = "normal")$PosteriorMean;
effect_size
betaval_otu
effect_size
betaval_otu
plot(effect_size,pch=21,lwd=2, bty="l",ylab="shrunk effect sizes (ash)",xlab="Features")
qval_otu <- qvalue(pval_otu);
library(qvalue)
qval_otu <- qvalue(pval_otu);
qval_otu
qval_otu <- log(qvalue(pval_otu));
qval_otu <- log(qvalue(pval_otu)$qvalues);
plot(qval_otu,pch=21,lwd=2, bty="l",ylab="log q values",xlab="Features")
qval_otu <- qvalue(pval_otu)$qvalues;
plot(qval_otu,pch=21,lwd=2, bty="l",ylab="log q values",xlab="Features")
qval_otu <- qvalue(pval_otu)$qvalues;
plot(qval_otu,pch=21,lwd=2, bty="l",ylim=c(0,1),ylab="log q values",xlab="Features")
qval_otu <- qvalue(pval_otu)$lfdr;
plot(qval_otu,pch=21,lwd=2, bty="l",ylim=c(0,1),ylab="q values",xlab="Features")
qval_otu <- qvalue(pval_otu)$qvalues;
plot(qval_otu,pch=21,lwd=2, bty="l",ylim=c(0,1),ylab="q values",xlab="Features")
qval_otu <- qvalue(pval_otu)$qvalues;
pval_otu <- pval_otu;
plot(qval_otu ~ pval_otu,pch=21,lwd=2, bty="l",ylim=c(0,1),ylab="q values",xlab=" p values")
feature_indices <- which(qval_otu <0.05);
feature_indices
pval_otu[feature_indices]
counts_feature_status <- counts_filtered[, feature_indices];
dim(counts_feature_status)
nclus_vec <- 2:4;
if(!dir.exists("Structure")) dir.create("Structure")
if(!dir.exists("Structure/imp_features")) dir.create("Structure/imp_features")
bayesfac <- array(0,length(nclus_vec));
samp_metadata <- cbind.data.frame(age,status,gender);
colnames(samp_metadata) = c("Age","Status","Gender");
gender
status
age = pData(cellPaper)$Age_at_Collection
status = pData(cellPaper)$Case_Control
gender =pData(cellPaper)$gender;
a
samp_metadata <- cbind.data.frame(age,status,gender);
gender
age = pData(cellPaper)$Age_at_Collection
status = pData(cellPaper)$Case_Control
gender =pData(cellPaper)$gender;
age
status
gender
gender =pData(cellPaper)$Gender;
gender
colnames(samp_metadata) = c("Age","Status","Gender");
samp_metadata <- cbind.data.frame(age,status,gender);
colnames(samp_metadata) = c("Age","Status","Gender");
dim(samp_metadata)
if(!dir.exists("Structure")) dir.create("Structure")
if(!dir.exists("Structure/imp_features")) dir.create("Structure/imp_features")
bayesfac <- array(0,length(nclus_vec));
age = pData(cellPaper)$Age_at_Collection
status = pData(cellPaper)$Case_Control
gender =pData(cellPaper)$Gender;
samp_metadata <- cbind.data.frame(age,status,gender);
colnames(samp_metadata) = c("Age","Status","Gender");
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/imp_features/clus_",nclus_vec[num]))) dir.create(paste0("Structure/imp_features/clus_",nclus_vec[num]))
obj <- StructureObj(counts_feature_status,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0("Structure/imp_features/clus_",nclus_vec[num]),partition=c('FALSE','TRUE','TRUE'));
}
